---
- name: Install Docker and Vaultwarden compose
  hosts: vaultwarden
  remote_user: root
  roles:
    - name: Install Docker
      role: docker
      vars:
        docker_compose_file_path: "/root/vaultwarden"
        docker_compose_content: |
          services:
            vaultwarden:
              image: vaultwarden/server:latest
              container_name: vaultwarden
              restart: unless-stopped
              environment:
                DOMAIN: "https://vault.francon.eu"  # required when using a reverse proxy
                DATABASE_URL: postgresql://vaultwarden:${POSTGRES_PASSWORD}@postgresql:5432/vaultwarden
              volumes:
                - ./vw-data:/data # the path before the : can be changed
              ports:
                - 80:80
            postgresql:
              image: docker.io/library/postgres:16-alpine
              restart: unless-stopped
              volumes:
                - database:/var/lib/postgresql/data
              environment:
                POSTGRES_USER: vaultwarden
                POSTGRES_DB: vaultwarden

          volumes:
            database:
              driver: local
        docker_compose_env: |
          POSTGRES_PASSWORD={{ vaultwarden_pg_pass }}
          ADMIN_TOKEN={{ vaultwarden_admin_token }}

- name: Setup backup script
  hosts: vaultwarden
  tasks:
    - name: Ensure restic is installed
      ansible.builtin.package:
        name: restic
        state: present

    - name: Copy backup script
      ansible.builtin.template:
        src: backup/backup.sh.j2
        dest: "/root/vaultwarden/backup.sh"
        mode: "0600"
        owner: root
        group: root
      vars:
        folders: vw-data/attachments vw-data/config.json vw-data/rsa*
        docker_postgres:
          service: postgresql
          username: vaultwarden
          file: vaultwarden-database.sql
        restic_repositories:
          - repository_url: s3:https://s3.eu-central-003.backblazeb2.com/tassigny-bucket/vaultwarden
            repository_password: "{{ vaultwarden_restic_password }}"
            aws_access_key_id: "{{ vaultwarden_restic_aws_access_key_id }}"
            aws_secret_access_key: "{{ vaultwarden_restic_aws_secret_access_key }}"
          - repository_url: /root/backup
            repository_password: "{{ vaultwarden_restic_password }}"

    - name: Setup backup Cron
      ansible.builtin.cron:
        name: "vaultwarden backup"
        minute: "5"
        hour: "4"
        job: "bash /root/vaultwarden/backup.sh >/dev/null 2>&1"
